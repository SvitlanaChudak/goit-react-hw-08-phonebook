{"version":3,"file":"static/js/447.1bad6325.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Box, Input, Button } from '@chakra-ui/react'\n\nconst initialValues = {\n        name: '',\n        number: '',\n}\n    \nconst FormSchema = yup.object().shape({\n  name: yup.string().min(2).required(),\n  number: yup.string().min(7).max(14).required(),\n});\n\n  \nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isExist = contacts.map(contact => contact.name);\n    \n      if (isExist.includes(values.name)) {\n        alert(`${values.name} is already in contacts`)\n        return\n      }\n    dispatch(addContact(values));\n    toast.success('New contact successfully added');\n    resetForm();\n  }\n    \n    return (\n            <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={FormSchema}>\n            <Box display='flex' flexDirection='column' gap='20px' width='300px' mb='30px' padding='25px' bgColor='#BEE3F8' boxShadow='2xl' borderRadius='5px' fontWeight='700'>\n                <label htmlFor='name'>Name</label>\n                <ErrorMessage name=\"name\" />\n                    <Input \n                    placeholder='enter name' bgColor='white'\n                     type=\"text\"\n                     name=\"name\"\n                     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                     required\n                        />\n                    \n                <label htmlFor='number'>Number</label>\n                <ErrorMessage name=\"number\" />\n                    <Input placeholder='enter number' bgColor='white'\n                     type=\"tel\"\n                     name=\"number\"\n                     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                     title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                     required\n                        />\n                      <div> \n                <Button colorScheme='blue' size='sm' ml='75px' type=\"submit\" >Add contact</Button>\n                    <Toaster />\n                    </div> \n                </Box>\n                </Formik>\n    )\n    \n    }\n\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, Text } from '@chakra-ui/react'\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n    return (\n        <Text fontSize='md' padding='10px' display='flex' alignItems='center' marginBottom='10px' key={id}>{name}: {number} <Button type=\"button\" size='xs' colorScheme='blue' marginLeft='10px' onClick={() => dispatch(deleteContact(id))}>Delete</Button></Text>\n    )\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n}\n","import { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { Box } from '@chakra-ui/react'\n\nexport const ContactList = () => {\n        const contacts = useSelector(getContacts);\n        const filterContacts = useSelector(getFilter);\n        const contactsList = contacts.filter(contact => contact.name.toLowerCase().includes(filterContacts.toLowerCase()));\n\n    return (\n        <Box bgColor='#BEE3F8' boxShadow='2xl' borderRadius='5px' width='300px'>\n        {contactsList.map(({ id, name, number }) => {\n                return (\n            <ContactItem key={id} id={id} name={name} number={number} />\n            )\n            })}\n                </Box>\n    )\n}\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Text, Input } from '@chakra-ui/react'\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = event => {\n    dispatch(setFilter(event.target.value))\n  }\n    return (\n        <Text fontSize='lg' fontWeight='700'>Find contacts by name\n        <Input size='md' mt='10px' mb='10px' width='300px' type=\"text\" name=\"filter\" value={filter} onChange={onChange}/>\n    </Text>\n    )\n}\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { Text, Container } from '@chakra-ui/react';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Text fontSize='2xl' fontWeight='700' mt='20px'>Your contacts</Text>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </Container>\n  );\n}"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","initialValues","name","number","FormSchema","yup","shape","min","required","max","ContactForm","useSelector","dispatch","useDispatch","onSubmit","values","resetForm","map","contact","includes","alert","addContact","toast","validationSchema","display","flexDirection","gap","width","mb","padding","bgColor","boxShadow","borderRadius","fontWeight","htmlFor","I","placeholder","type","pattern","title","colorScheme","size","ml","ContactItem","id","fontSize","alignItems","marginBottom","marginLeft","onClick","deleteContact","ContactList","filterContacts","contactsList","toLowerCase","Filter","mt","value","onChange","event","setFilter","target","Contacts","useEffect","fetchContacts"],"sourceRoot":""}